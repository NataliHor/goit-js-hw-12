import{a as f,S as L,i as c}from"./assets/vendor-b11e2a50.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))l(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const n of r.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&l(n)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function l(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();const x="https://pixabay.com",S="api",P="44809751-3b2ccf197f9e8e95d68b14f11";f.defaults.baseURL=x;function u({q:a="",page:s=1,per_page:t=15}={}){return f.get(S,{params:{key:P,q:a,image_type:"photo",orientation:"horizontal",safesearch:!0,page:s,per_page:t,language:"en"}}).then(({data:l})=>l)}let b=new L(".gallery-item a",{captionsData:"alt",captionDelay:250}).refresh();function p(a){const s=document.querySelector(".gallery"),t=a.map(({webformatURL:l,largeImageURL:e,tags:r,likes:n,views:h,comments:m,downloads:d})=>`
        <li class="gallery-item">
          <a href="${e}">
            <img src="${l}" alt="${r}" loading="lazy" class="gallery-image"/>
          </a>
          <ul class="info">
            <li class="info-item"> <h2 class="info-text">Likes</h2> <p class="info-value">${n}</p> </li>
            <li class="info-item"> <h2 class="info-text">Views</h2> <p class="info-value">${h}</p> </li>
            <li class="info-item"> <h2 class="info-text">Comments</h2> <p class="info-value">${m}</p> </li>
            <li class="info-item"> <h2 class="info-text">Downloads</h2> <p class="info-value">${d}</p> </li>
          </ul>
        </li>
    `).join("");s.innerHTML+=t,b.refresh()}const q=document.querySelector(".gallery"),v=document.querySelector(".search-form"),y=document.querySelector(".loading"),i=document.querySelector(".load-btn"),o={q:"",page:1,per_page:15,maxPage:0};v.addEventListener("submit",w);async function w(a){a.preventDefault(),q.innerHTML="",o.page=1;const s=a.currentTarget;if(o.q=s.elements.query.value.toLowerCase(),o.q===""){c.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"});return}y.style.display="flex";try{const t=await u(o);t.hits.length===0?(i.style.display="none",c.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!!!"})):(o.maxPage=Math.ceil(t.totalHits/o.per_page),p(t.hits),t.hits.length>0&&t.hits.length!==t.totalHits&&(i.style.display="flex",i.addEventListener("click",g))),o.page===o.maxPage&&(c.info({position:"topRight",message:"We're sorry, but you've reached the end of search results."}),i.style.display="none",i.removeEventListener("click",g))}catch{c.error({position:"topRight",message:"Sorry, there was an error fetching images. Please try again later!"}),i.style.display="none"}finally{y.style.display="none"}}async function g(){i.style.display="none",y.style.display="flex",o.page+=1;try{const a=await u(o);p(a.hits);const t=document.querySelector(".gallery").getBoundingClientRect().height;window.scrollBy({top:t*2,behavior:"smooth"}),i.style.display="flex"}catch{c.error({position:"topRight",message:"Sorry, there was an error fetching images. Please try again later!"})}finally{y.style.display="none"}}
//# sourceMappingURL=commonHelpers.js.map
