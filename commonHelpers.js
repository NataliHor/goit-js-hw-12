import{a as d,S as m,i as n}from"./assets/vendor-b11e2a50.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))i(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const x="https://pixabay.com/api/",S="44809751-3b2ccf197f9e8e95d68b14f11";async function g({q:a="",page:o=1,per_page:r=15}={}){try{return(await d.get(`${x}`,{params:{key:S,q:a,image_type:"photo",orientation:"horizontal",safesearch:!0,page:o,per_page:r,language:"en"}})).data}catch(i){throw console.error("Error fetching images:",i),i}}let L=new m(".gallery-item a",{captionsData:"alt",captionDelay:250}).refresh();function p(a){const o=document.querySelector(".gallery"),r=a.map(({webformatURL:i,largeImageURL:e,tags:t,likes:c,views:f,comments:u,downloads:h})=>`
        <li class="gallery-item">
          <a href="${e}">
            <img src="${i}" alt="${t}" loading="lazy" class="gallery-image"/>
          </a>
          <ul class="info">
            <li class="info-item"> <h2 class="info-text">Likes</h2> <p class="info-value">${c}</p> </li>
            <li class="info-item"> <h2 class="info-text">Views</h2> <p class="info-value">${f}</p> </li>
            <li class="info-item"> <h2 class="info-text">Comments</h2> <p class="info-value">${u}</p> </li>
            <li class="info-item"> <h2 class="info-text">Downloads</h2> <p class="info-value">${h}</p> </li>
          </ul>
        </li>
    `).join("");o.innerHTML+=r,L.refresh()}const P=document.querySelector(".gallery"),b=document.querySelector(".search-form"),y=document.querySelector(".loading"),l=document.querySelector(".load-btn"),s={q:"",page:1,per_page:15,maxPage:0};l.addEventListener("click",w);b.addEventListener("submit",q);async function q(a){a.preventDefault(),P.innerHTML="",s.page=1;const o=a.currentTarget;if(s.q=o.elements.query.value.toLowerCase(),s.q===""){n.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!"});return}y.style.display="flex";try{const r=await g(s);r.hits.length===0?(l.style.display="none",n.error({position:"topRight",message:"Sorry, there are no images matching your search query. Please try again!!!"})):(s.maxPage=Math.ceil(r.totalHits/s.per_page),p(r.hits),s.page<s.maxPage?l.style.display="flex":(l.style.display="none",n.info({position:"topRight",message:"We're sorry, but you've reached the end of search results."})))}catch{n.error({position:"topRight",message:"Sorry, there was an error fetching images. Please try again later!"})}finally{y.style.display="none"}}async function w(){l.style.display="none",y.style.display="flex",s.page+=1;try{const a=await g(s);p(a.hits),s.page<s.maxPage?l.style.display="flex":(l.style.display="none",n.info({position:"topRight",message:"We're sorry, but you've reached the end of search results."}));const r=document.querySelector(".gallery").getBoundingClientRect().height;window.scrollBy({top:r*2,behavior:"smooth"}),l.style.display="flex"}catch{n.error({position:"topRight",message:"Sorry, there was an error fetching images. Please try again later!"})}finally{y.style.display="none"}}
//# sourceMappingURL=commonHelpers.js.map
